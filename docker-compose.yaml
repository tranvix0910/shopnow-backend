services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    image: api-gateway:latest
    ports:
      - "5860:5860" 
    depends_on:
      - keycloak
      - config-server
      - discovery-server
      - product-service
      - shopping-cart-service
      - user-service
      - postgres

  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    image: config-server:latest
    ports:
      - "5859:5859"
    depends_on:
      - discovery-server

  discovery-server:
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
    image: discovery-server:latest
    ports:
      - "8761:8761"

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    image: product-service:latest
    ports:
      - "5861:5861"
    depends_on:
      - discovery-server
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin

  shopping-cart-service:
    build:
      context: ./shopping-cart-service
      dockerfile: Dockerfile
    image: shopping-cart-service:latest
    ports:
      - "5863:5863"
    depends_on:
      - discovery-server
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    image: user-service:latest
    ports:
      - "5865:5865"
    depends_on:
      - discovery-server
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin

  postgres:
    image: postgres:latest
    platform: linux/amd64
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "6543:5432"

  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql:5.7
    platform: linux/amd64
    volumes:
      - ./mysql_keycloak_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:23.0.3
    command: [ "start-dev", "--import-realm" ]
    depends_on:
      - keycloak-mysql
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: keycloak-mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    volumes:
      - ./keycloak-realms/:/opt/keycloak/data/import/
